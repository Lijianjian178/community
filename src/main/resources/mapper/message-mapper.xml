<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>
    
    <select id="selectLatestMessageByConversationId" resultType="Message">
        select *
        from message where message.id in
            (select max(id)
            from message
            group by conversation_id)
        and conversation_id like CONCAT(CONCAT('%', #{userId}), '%')
        and status != 2
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationRows" resultType="int">
        select count(distinct conversation_id)
        from message
        where conversation_id like CONCAT(CONCAT('%', #{userId}), '%')
    </select>

    <select id="selectLetters" resultType="Message">
        select *
        from message
        where conversation_id = #{conversationId}
        and status != 2
        order by create_time desc, id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where conversation_id = #{conversationId}
        and status != 2
    </select>

    <select id="selectUnreadLetterCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>

    </select>

    <insert id="insertLetter" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotice" resultType="Message">
        select *
        from message
        where id in (
            select max(id) from message
            where to_id = #{userId}
            and from_id = 1
            and conversation_id = #{topic}
            and status != 2
        )
    </select>

    <select id="selectNoticeCount" resultType="int">
        select count(id)
        from message
        where to_id = #{userId}
        and from_id = 1
        and conversation_id = #{topic}
        and status != 2
    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id)
        from message
        where to_id = #{userId}
        and from_id = 1
        and status = 0
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <select id="selectNotices" resultType="Message">
        select *
        from message
        where to_id = #{userId}
        and conversation_id = #{topic}
        and status != 2
        order by create_time desc, id desc
        limit #{offset}, #{limit}
    </select>

</mapper>